{"version":3,"sources":["components/Loader.js","components/App.js","components/ToastMessage.js","utils/index.js","components/Signin.js","components/Signup.js","components/Checkout.js","components/Navbar.js","components/Brews.js","registerServiceWorker.js","index.js"],"names":["Loader","show","position","dangerouslySetInlineStyle","__style","bottom","left","transform","color","size","margin","apiUrl","process","API_URL","strapi","Strapi","App","state","brands","searchTerm","loadingBrands","handleChange","value","setState","searchBrands","a","async","request","data","query","response","console","log","this","display","justifyContent","marginTop","id","accessibilityLabel","onChange","placeholder","icon","marginBottom","backgroundColor","wrap","shape","map","brand","paddingY","width","key","_id","image","height","fit","alt","naturalHeight","naturalWidth","src","url","alignItems","direction","bold","name","description","Link","to","Component","ToastMessage","message","text","calculatePrice","items","reduce","acc","item","quantity","price","toFixed","calculateAmount","Number","setCart","cartKey","localStorage","setItem","JSON","stringify","getCart","getItem","parse","clearCart","removeItem","setToken","tokenKey","getToken","clearToken","Signin","username","password","toast","toastMessage","loading","event","target","handleSubmit","preventDefault","isFormEmpty","showToast","login","jwt","redirectUser","path","props","history","push","setTimeout","padding","style","textAlign","maxWidth","onSubmit","type","inline","disabled","React","Signup","email","register","italic","_CheckoutForm","cartItems","address","postalCode","city","confirmationEmailAddress","orderProcessing","modal","handleConfirmOrder","handleSubmitOrder","amount","stripe","createToken","token","createEntry","brews","subject","Date","now","html","redirect","closeModal","length","Fragment","onReady","input","focus","align","ConfirmationModal","accessibilityCloseLabel","accessibilityModalLabel","heading","onDismiss","footer","marginRight","marginLeft","onClick","role","CheckoutForm","withRouter","injectStripe","Checkout","apiKey","Navbar","handleSignOut","AuthNav","NavLink","activeClassName","exact","className","UnAuthNav","Brews","addToCart","brew","alreadyInCart","findIndex","updatedItems","concat","deleteItemFromCart","itemToDeleteId","filteredItems","filter","match","params","brandId","flexWrap","alignSelf","wash","cartItem","iconColor","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","PrivateRoute","component","rest","Route","render","Redirect","pathname","from","ReactDOM","HashRouter","Switch","document","getElementById","URL","origin","addEventListener","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7dca2153.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { GridLoader } from \"react-spinners\";\r\nimport { Box } from \"gestalt\";\r\n\r\nconst Loader = ({ show }) =>\r\n  show && (\r\n    <Box\r\n      position=\"fixed\"\r\n      dangerouslySetInlineStyle={{\r\n        __style: {\r\n          bottom: 300,\r\n          left: \"50%\",\r\n          transform: \"translateX(-50%)\"\r\n        }\r\n      }}\r\n    >\r\n      <GridLoader color=\"darkorange\" size={25} margin=\"3px\" />\r\n    </Box>\r\n  );\r\n\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Box,\r\n  Heading,\r\n  Card,\r\n  Image,\r\n  Text,\r\n  SearchField,\r\n  Icon\r\n} from \"gestalt\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Strapi from \"strapi-sdk-javascript/build/main\";\r\nimport Loader from \"./Loader\";\r\nimport \"./App.css\";\r\n\r\nconst apiUrl = process.env.API_URL || \"https://ralm-brewhaha.herokuapp.com/\";\r\nconst strapi = new Strapi(apiUrl);\r\n\r\nclass App extends Component {\r\n  state = {\r\n    brands: [],\r\n    searchTerm: \"\",\r\n    loadingBrands: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const response = await strapi.request(\"POST\", \"/graphql\", {\r\n        data: {\r\n          query: `query {\r\n            brands {\r\n              _id\r\n              name\r\n              description\r\n              image {\r\n                url\r\n              }\r\n            }\r\n          }`\r\n        }\r\n      });\r\n      this.setState({\r\n        brands: response.data.brands,\r\n        loadingBrands: false\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        loadingBrands: false\r\n      });\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  handleChange = ({ value }) => {\r\n    this.setState(\r\n      {\r\n        searchTerm: value\r\n      },\r\n      () => this.searchBrands()\r\n    );\r\n  };\r\n\r\n  // filteredBrands = ({ searchTerm, brands }) => {\r\n  //   console.log(searchTerm);\r\n  //   return brands.filter(brand => {\r\n  //     return (\r\n  //       brand.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n  //       brand.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n  //     );\r\n  //   });\r\n  // };\r\n\r\n  searchBrands = async () => {\r\n    const response = await strapi.request(\"POST\", \"graphql\", {\r\n      data: {\r\n        query: `query {\r\n            brands(where: { name_contains: \"${this.state.searchTerm}\" }) {\r\n              _id\r\n              name\r\n              description\r\n              image {\r\n                url\r\n              }\r\n            }\r\n        }`\r\n      }\r\n    });\r\n    console.log(this.state.searchTerm, response.data.brands);\r\n    this.setState({\r\n      brands: response.data.brands,\r\n      loadingBrands: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { searchTerm, loadingBrands, brands } = this.state;\r\n    return (\r\n      <Container>\r\n        {/* Brand Search */}\r\n        <Box display=\"flex\" justifyContent=\"center\" marginTop={4}>\r\n          <SearchField\r\n            id=\"searchField\"\r\n            accessibilityLabel=\"Brand Search Field\"\r\n            onChange={this.handleChange}\r\n            placeholder=\"Search Brands\"\r\n          ></SearchField>\r\n          <Box margin={3}>\r\n            <Icon\r\n              icon=\"filter\"\r\n              color={searchTerm ? \"orange\" : \"gray\"}\r\n              size={20}\r\n              accessibilityLabel=\"Filter\"\r\n            />\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* Brands Section */}\r\n        <Box display=\"flex\" justifyContent=\"center\" marginBottom={2}>\r\n          {/* Brands Header */}\r\n          <Heading color=\"midnight\" size=\"md\">\r\n            Brew Brands\r\n          </Heading>\r\n        </Box>\r\n        {/* Brands */}\r\n        <Box\r\n          dangerouslySetInlineStyle={{\r\n            __style: {\r\n              backgroundColor: \"#d6c8ec\"\r\n            }\r\n          }}\r\n          wrap\r\n          shape=\"rounded\"\r\n          display=\"flex\"\r\n          justifyContent=\"around\"\r\n        >\r\n          {brands.map(brand => (\r\n            <Box paddingY={4} margin={2} width={200} key={brand._id}>\r\n              <Card\r\n                image={\r\n                  <Box height={200} width={200}>\r\n                    <Image\r\n                      fit=\"cover\"\r\n                      alt=\"Brand\"\r\n                      naturalHeight={1}\r\n                      naturalWidth={1}\r\n                      src={`${apiUrl}${brand.image.url}`}\r\n                    />\r\n                  </Box>\r\n                }\r\n              >\r\n                <Box\r\n                  display=\"flex\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  direction=\"column\"\r\n                >\r\n                  <Text bold size=\"xl\">\r\n                    {brand.name}\r\n                  </Text>\r\n                  <Text>{brand.description}</Text>\r\n                  <Text bold size=\"xl\">\r\n                    <Link to={`/${brand._id}`}>See Brews</Link>\r\n                  </Text>\r\n                </Box>\r\n              </Card>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n        {/* <Spinner show={loadingBrands} accessibilityLabel=\"Loading Spinner\" /> */}\r\n        <Loader show={loadingBrands} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { Toast, Box } from \"gestalt\";\r\n\r\nconst ToastMessage = ({ show, message }) =>\r\n  show && (\r\n    <Box\r\n      dangerouslySetInlineStyle={{\r\n        __style: {\r\n          // bottom: 250,\r\n          left: \"50%\",\r\n          transform: \"translateX(-50%)\"\r\n        }\r\n      }}\r\n      position=\"fixed\"\r\n    >\r\n      <Toast color=\"orange\" text={message} />\r\n    </Box>\r\n  );\r\n\r\nexport default ToastMessage;\r\n","const CART_KEY = \"cart\";\r\nconst TOKEN_KEY = \"jwt\";\r\n\r\nexport const calculatePrice = items => {\r\n  return `$${items\r\n    .reduce((acc, item) => acc + item.quantity * item.price, 0)\r\n    .toFixed(2)}`;\r\n};\r\n\r\nexport const calculateAmount = items => {\r\n  return Number(\r\n    items.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)\r\n  );\r\n};\r\n\r\n// Cart\r\nexport const setCart = (value, cartKey = CART_KEY) => {\r\n  if (localStorage) {\r\n    localStorage.setItem(cartKey, JSON.stringify(value));\r\n  }\r\n};\r\n\r\nexport const getCart = (cartKey = CART_KEY) => {\r\n  if (localStorage && localStorage.getItem(cartKey)) {\r\n    return JSON.parse(localStorage.getItem(cartKey));\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const clearCart = (cartKey = CART_KEY) => {\r\n  if (localStorage) {\r\n    localStorage.removeItem(cartKey);\r\n  }\r\n};\r\n\r\n// Auth\r\nexport const setToken = (value, tokenKey = TOKEN_KEY) => {\r\n  if (localStorage) {\r\n    localStorage.setItem(tokenKey, JSON.stringify(value));\r\n  }\r\n};\r\n\r\nexport const getToken = (tokenKey = TOKEN_KEY) => {\r\n  if (localStorage && localStorage.getItem(tokenKey)) {\r\n    return JSON.parse(localStorage.getItem(tokenKey));\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const clearToken = (tokenKey = TOKEN_KEY) => {\r\n  if (localStorage) {\r\n    localStorage.removeItem(tokenKey);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Container, Box, Button, Heading, TextField } from \"gestalt\";\r\nimport ToastMessage from \"./ToastMessage.js\";\r\nimport Strapi from \"strapi-sdk-javascript/build/main\";\r\nimport { setToken } from \"../utils/index\";\r\n\r\nconst apiUrl = process.env.API_URL || \"https://ralm-brewhaha.herokuapp.com/\";\r\nconst strapi = new Strapi(apiUrl);\r\n\r\nclass Signin extends React.Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    toast: false,\r\n    toastMessage: \"\",\r\n    loading: false\r\n  };\r\n\r\n  handleChange = ({ event, value }) => {\r\n    this.setState({ [event.target.name]: value });\r\n  };\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const { username, password } = this.state;\r\n\r\n    if (this.isFormEmpty(this.state)) {\r\n      this.showToast(\"Fill in all fields\");\r\n      return;\r\n    }\r\n\r\n    //Sign up user\r\n    try {\r\n      // set loading to true\r\n      this.setState({ loading: true });\r\n      // make request to register user with strapi\r\n      const response = await strapi.login(username, password);\r\n      // set loading to false\r\n      this.setState({ loading: false });\r\n      // put token (to manage user session) in local storage\r\n      setToken(response.jwt);\r\n      console.log(response);\r\n      // redirect user to homepage\r\n      this.redirectUser(\"/\");\r\n    } catch (error) {\r\n      // set loading to false\r\n      this.setState({ loading: false });\r\n      // show error message with toast message\r\n      this.showToast(error.message);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  redirectUser = path => this.props.history.push(path);\r\n\r\n  isFormEmpty = ({ username, password }) => {\r\n    return !username || !password;\r\n  };\r\n\r\n  showToast = toastMessage => {\r\n    this.setState({ toast: true, toastMessage: toastMessage });\r\n    setTimeout(() => this.setState({ toast: false, toastMessage: \"\" }), 3000);\r\n  };\r\n\r\n  render() {\r\n    const { toastMessage, toast, loading } = this.state;\r\n    return (\r\n      <Container>\r\n        <Box\r\n          dangerouslySetInlineStyle={{\r\n            __style: {\r\n              backgroundColor: \"#d6a3b1\"\r\n            }\r\n          }}\r\n          margin={4}\r\n          padding={4}\r\n          shape=\"rounded\"\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n        >\r\n          {/* Sign In Form */}\r\n          <form\r\n            style={{\r\n              display: \"inline-block\",\r\n              textAlign: \"center\",\r\n              maxWidth: 450\r\n            }}\r\n            onSubmit={this.handleSubmit}\r\n          >\r\n            {/* Sign Up Form Heading */}\r\n            <Box\r\n              marginBottom={2}\r\n              display=\"flex\"\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Heading color=\"midnight\">Welcome Back!</Heading>\r\n            </Box>\r\n            {/* Username Input */}\r\n            <TextField\r\n              id=\"username\"\r\n              type=\"text\"\r\n              name=\"username\"\r\n              placeholder=\"Username\"\r\n              onChange={this.handleChange}\r\n            />\r\n            {/* Password Input */}\r\n            <TextField\r\n              id=\"password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <Button\r\n              inline\r\n              disabled={loading}\r\n              color=\"blue\"\r\n              text=\"Submit\"\r\n              type=\"submit\"\r\n            />\r\n          </form>\r\n        </Box>\r\n        <ToastMessage show={toast} message={toastMessage} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\nimport { Container, Box, Button, Heading, Text, TextField } from \"gestalt\";\r\nimport ToastMessage from \"./ToastMessage.js\";\r\nimport Strapi from \"strapi-sdk-javascript/build/main\";\r\nimport { setToken } from \"../utils/index\";\r\n\r\nconst apiUrl = process.env.API_URL || \"https://ralm-brewhaha.herokuapp.com/\";\r\nconst strapi = new Strapi(apiUrl);\r\n\r\nclass Signup extends React.Component {\r\n  state = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    toast: false,\r\n    toastMessage: \"\",\r\n    loading: false\r\n  };\r\n\r\n  handleChange = ({ event, value }) => {\r\n    this.setState({ [event.target.name]: value });\r\n  };\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const { username, email, password } = this.state;\r\n\r\n    if (this.isFormEmpty(this.state)) {\r\n      this.showToast(\"Fill in all fields\");\r\n      return;\r\n    }\r\n\r\n    //Sign up user\r\n    try {\r\n      // set loading to true\r\n      this.setState({ loading: true });\r\n      // make request to register user with strapi\r\n      const response = await strapi.register(username, email, password);\r\n      // set loading to false\r\n      this.setState({ loading: false });\r\n      // put token (to manage user session) in local storage\r\n      setToken(response.jwt);\r\n      console.log(response);\r\n      // redirect user to homepage\r\n      this.redirectUser(\"/\");\r\n    } catch (error) {\r\n      // set loading to false\r\n      this.setState({ loading: false });\r\n      // show error message with toast message\r\n      this.showToast(error.message);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  redirectUser = path => this.props.history.push(path);\r\n\r\n  isFormEmpty = ({ username, email, password }) => {\r\n    return !username || !email || !password;\r\n  };\r\n\r\n  showToast = toastMessage => {\r\n    this.setState({ toast: true, toastMessage: toastMessage });\r\n    setTimeout(() => this.setState({ toast: false, toastMessage: \"\" }), 500);\r\n  };\r\n\r\n  render() {\r\n    const { toastMessage, toast, loading } = this.state;\r\n    return (\r\n      <Container>\r\n        <Box\r\n          dangerouslySetInlineStyle={{\r\n            __style: {\r\n              backgroundColor: \"#ebe2da\"\r\n            }\r\n          }}\r\n          margin={4}\r\n          padding={4}\r\n          shape=\"rounded\"\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n        >\r\n          {/* Sign Up Form */}\r\n          <form\r\n            style={{\r\n              display: \"inline-block\",\r\n              textAlign: \"center\",\r\n              maxWidth: 450\r\n            }}\r\n            onSubmit={this.handleSubmit}\r\n          >\r\n            {/* Sign Up Form Heading */}\r\n            <Box\r\n              marginBottom={2}\r\n              display=\"flex\"\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Heading color=\"midnight\">Let's Get Started</Heading>\r\n              <Text italic color=\"orchid\">\r\n                Sign up to order some brews!\r\n              </Text>\r\n            </Box>\r\n            {/* Username Input */}\r\n            <TextField\r\n              id=\"username\"\r\n              type=\"text\"\r\n              name=\"username\"\r\n              placeholder=\"Username\"\r\n              onChange={this.handleChange}\r\n            />\r\n            {/* Email Input */}\r\n            <TextField\r\n              id=\"email\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email Address\"\r\n              onChange={this.handleChange}\r\n            />\r\n            {/* Password Input */}\r\n            <TextField\r\n              id=\"password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <Button\r\n              inline\r\n              disabled={loading}\r\n              color=\"blue\"\r\n              text=\"Submit\"\r\n              type=\"submit\"\r\n            />\r\n          </form>\r\n        </Box>\r\n        <ToastMessage show={toast} message={toastMessage} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Box,\r\n  Button,\r\n  Heading,\r\n  Text,\r\n  TextField,\r\n  Modal,\r\n  Spinner\r\n} from \"gestalt\";\r\nimport {\r\n  Elements,\r\n  StripeProvider,\r\n  CardElement,\r\n  injectStripe\r\n} from \"react-stripe-elements\";\r\nimport {\r\n  getCart,\r\n  calculatePrice,\r\n  clearCart,\r\n  calculateAmount\r\n} from \"../utils/index\";\r\nimport Strapi from \"strapi-sdk-javascript/build/main\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport ToastMessage from \"./ToastMessage.js\";\r\n\r\nconst apiUrl = process.env.API_URL || \"https://ralm-brewhaha.herokuapp.com/\";\r\nconst strapi = new Strapi(apiUrl);\r\n\r\nclass _CheckoutForm extends React.Component {\r\n  state = {\r\n    cartItems: [],\r\n    address: \"\",\r\n    postalCode: \"\",\r\n    city: \"\",\r\n    confirmationEmailAddress: \"\",\r\n    toast: false,\r\n    toastMessage: \"\",\r\n    orderProcessing: false,\r\n    modal: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ cartItems: getCart() });\r\n  }\r\n\r\n  handleChange = ({ event, value }) => {\r\n    this.setState({ [event.target.name]: value });\r\n  };\r\n\r\n  handleConfirmOrder = async event => {\r\n    event.preventDefault();\r\n\r\n    if (this.isFormEmpty(this.state)) {\r\n      this.showToast(\"Fill in all fields\");\r\n      return;\r\n    }\r\n\r\n    this.setState({ modal: true });\r\n  };\r\n\r\n  isFormEmpty = ({ address, postalCode, city, confirmationEmailAddress }) => {\r\n    return !address || !postalCode || !city || !confirmationEmailAddress;\r\n  };\r\n\r\n  handleSubmitOrder = async () => {\r\n    const {\r\n      cartItems,\r\n      city,\r\n      address,\r\n      postalCode,\r\n      confirmationEmailAddress\r\n    } = this.state;\r\n\r\n    const amount = calculateAmount(cartItems);\r\n\r\n    // Process Order\r\n    this.setState({ orderProcessing: true });\r\n    let token;\r\n    try {\r\n      // Create stripe token\r\n      const response = await this.props.stripe.createToken();\r\n      token = response.token.id;\r\n\r\n      // Create order with strapi sdk (make request to backend)\r\n      await strapi.createEntry(\"orders\", {\r\n        amount,\r\n        brews: cartItems,\r\n        city,\r\n        postalCode,\r\n        address,\r\n        token\r\n      });\r\n      // Send an email notification\r\n      await strapi.request(\"POST\", \"/email\", {\r\n        data: {\r\n          to: confirmationEmailAddress,\r\n          subject: `Order Confirmation - RALM BrewHaha ${new Date(Date.now())}`,\r\n          text: \"Your order has been processed\",\r\n          html: \"<bold>Expect your order to arrive in 2-3 shipping days</bold>\"\r\n        }\r\n      });\r\n\r\n      // Set orderProcessing - false, setModal - false\r\n      this.setState({ orderProcessing: false, modal: false });\r\n      // Clear user cart of brews\r\n      clearCart();\r\n      // Show success toast\r\n      this.showToast(\"Your order has been successfully submitted!\", true);\r\n    } catch (err) {\r\n      // Set orderProcessing - false, setModal - false\r\n      this.setState({ orderProcessing: false, modal: false });\r\n      // Clear user cart of brews\r\n      clearCart();\r\n      this.showToast(err.message);\r\n    }\r\n  };\r\n\r\n  showToast = (toastMessage, redirect = false) => {\r\n    this.setState({ toast: true, toastMessage: toastMessage });\r\n    setTimeout(\r\n      () =>\r\n        this.setState({ toast: false, toastMessage: \"\" }, () => {\r\n          // if true is pass to redirect props it will be redirected to home\r\n          redirect && this.props.push(\"/\");\r\n        }),\r\n      5000\r\n    );\r\n  };\r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  render() {\r\n    const {\r\n      toast,\r\n      toastMessage,\r\n      cartItems,\r\n      modal,\r\n      orderProcessing\r\n    } = this.state;\r\n    return (\r\n      <Container>\r\n        <Box\r\n          color=\"darkWash\"\r\n          margin={4}\r\n          padding={4}\r\n          shape=\"rounded\"\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          direction=\"column\"\r\n        >\r\n          {/* Checkout Form Heading */}\r\n          <Heading color=\"midnight\">Checkout</Heading>\r\n          {cartItems.length > 0 ? (\r\n            <React.Fragment>\r\n              {/* User Cart */}\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                direction=\"column\"\r\n                marginTop={2}\r\n                marginBottom={6}\r\n              >\r\n                <Text color=\"darkGray\" italic>\r\n                  {cartItems.length} Items for Checkout\r\n                </Text>\r\n                <Box padding={2}>\r\n                  {cartItems.map(item => (\r\n                    <Box key={item._id} padding={1}>\r\n                      <Text color=\"midnight\">\r\n                        {item.name} x {item.quantity} - $\r\n                        {item.quantity * item.price}\r\n                      </Text>\r\n                    </Box>\r\n                  ))}\r\n                </Box>\r\n                <Text bold>Total Amount: {calculatePrice(cartItems)}</Text>\r\n              </Box>\r\n              {/* Checkout Form */}\r\n              <form\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  textAlign: \"center\",\r\n                  maxWidth: 450\r\n                }}\r\n                onSubmit={this.handleConfirmOrder}\r\n              >\r\n                {/* Shipping Address Input */}\r\n                <TextField\r\n                  id=\"address\"\r\n                  type=\"text\"\r\n                  name=\"address\"\r\n                  placeholder=\"Shipping Address\"\r\n                  onChange={this.handleChange}\r\n                />\r\n                {/* Postal Code Input */}\r\n                <TextField\r\n                  id=\"postalCode\"\r\n                  type=\"text\"\r\n                  name=\"postalCode\"\r\n                  placeholder=\"Postal Code\"\r\n                  onChange={this.handleChange}\r\n                />\r\n                {/* City Input */}\r\n                <TextField\r\n                  id=\"city\"\r\n                  type=\"text\"\r\n                  name=\"city\"\r\n                  placeholder=\"City of Residence\"\r\n                  onChange={this.handleChange}\r\n                />\r\n                {/* Confirmation Email Address Input */}\r\n                <TextField\r\n                  id=\"confirmationEmailAddress\"\r\n                  type=\"email\"\r\n                  name=\"confirmationEmailAddress\"\r\n                  placeholder=\"Confirmation Email Address\"\r\n                  onChange={this.handleChange}\r\n                />\r\n                {/* Credit Card Element */}\r\n                <CardElement\r\n                  id=\"stripe__input\"\r\n                  onReady={input => input.focus()}\r\n                />\r\n\r\n                <button id=\"stripe__button\" type=\"submit\">\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </React.Fragment>\r\n          ) : (\r\n            // Default Text if No Items in Cart\r\n            <Box color=\"darkWash\" shape=\"rounded\" padding={4}>\r\n              {\" \"}\r\n              <Heading align=\"center\" color=\"watermelon\" size=\"xs\">\r\n                Your cart is Empty\r\n              </Heading>\r\n              <Text align=\"center\" italic color=\"green\">\r\n                Add some brews!\r\n              </Text>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n        {/* Confirmation Modal */}\r\n        {modal && (\r\n          <ConfirmationModal\r\n            orderProcessing={orderProcessing}\r\n            cartItems={cartItems}\r\n            closeModal={this.closeModal}\r\n            handleSubmitOrder={this.handleSubmitOrder}\r\n          />\r\n        )}\r\n        <ToastMessage show={toast} message={toastMessage} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst ConfirmationModal = ({\r\n  orderProcessing,\r\n  cartItems,\r\n  closeModal,\r\n  handleSubmitOrder\r\n}) => (\r\n  <Modal\r\n    accessibilityCloseLabel=\"close\"\r\n    accessibilityModalLabel=\"Confirm Your Order\"\r\n    heading=\"Confirm Your Order\"\r\n    onDismiss={closeModal}\r\n    footer={\r\n      <Box\r\n        display=\"flex\"\r\n        marginRight={-1}\r\n        marginLeft={-1}\r\n        justifyContent=\"center\"\r\n      >\r\n        <Box padding={1}>\r\n          <Button\r\n            color=\"red\"\r\n            size=\"lg\"\r\n            text=\"Submit\"\r\n            disabled={orderProcessing}\r\n            onClick={handleSubmitOrder}\r\n          />\r\n        </Box>\r\n        <Box padding={1}>\r\n          <Button\r\n            size=\"lg\"\r\n            text=\"Cancel\"\r\n            disabled={orderProcessing}\r\n            onClick={closeModal}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    }\r\n    role=\"alertdialog\"\r\n    size=\"sm\"\r\n  >\r\n    {/* Order Summary */}\r\n    {!orderProcessing && (\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        direction=\"column\"\r\n        padding={2}\r\n        color=\"lightWash\"\r\n      >\r\n        {cartItems.map(item => (\r\n          <Box key={item._id} padding={1}>\r\n            <Text size=\"lg\" color=\"red\">\r\n              {item.name} x {item.quantity} - ${item.quantity * item.price}\r\n            </Text>\r\n          </Box>\r\n        ))}\r\n        <Box paddingY={2}>\r\n          <Text size=\"lg\" bold>\r\n            Total: {calculatePrice(cartItems)}\r\n          </Text>\r\n        </Box>\r\n      </Box>\r\n    )}\r\n\r\n    {/* Order Processing Spinner */}\r\n    <Spinner\r\n      show={orderProcessing}\r\n      accessibilityLabel=\"Order Processing Spinner\"\r\n    />\r\n    {orderProcessing && (\r\n      <Text align=\"center\" italic>\r\n        Submitting Order...\r\n      </Text>\r\n    )}\r\n  </Modal>\r\n);\r\n\r\nconst CheckoutForm = withRouter(injectStripe(_CheckoutForm));\r\n\r\nconst Checkout = () => (\r\n  <StripeProvider apiKey=\"pk_test_KugYiBxbi8yfI0WGA01Ixaa500ehQAs8Wm\">\r\n    <Elements>\r\n      <CheckoutForm />\r\n    </Elements>\r\n  </StripeProvider>\r\n);\r\n\r\nexport default Checkout;\r\n","import React from \"react\";\r\nimport { Box, Text, Heading, Image, Button } from \"gestalt\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { getToken, clearCart, clearToken } from \"../utils/index\";\r\n\r\nclass Navbar extends React.Component {\r\n  handleSignOut = () => {\r\n    // Clear token\r\n    clearToken();\r\n    // Clear cart\r\n    clearCart();\r\n    // Redirect Home\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return getToken() !== null ? (\r\n      <AuthNav handleSignOut={this.handleSignOut} />\r\n    ) : (\r\n      <UnAuthNav />\r\n    );\r\n  }\r\n}\r\n\r\nconst AuthNav = ({ handleSignOut }) => (\r\n  <Box\r\n    display=\"flex\"\r\n    alignItems=\"center\"\r\n    justifyContent=\"around\"\r\n    color=\"midnight\"\r\n    height={70}\r\n    padding={1}\r\n    shape=\"roundedBottom\"\r\n  >\r\n    {/* Check out Link */}\r\n    <NavLink activeClassName=\"active\" to=\"/checkout\">\r\n      <Text color=\"white\" size=\"xl\">\r\n        Checkout{\" \"}\r\n      </Text>\r\n    </NavLink>\r\n\r\n    {/* Title and Logo */}\r\n    <NavLink activeClassName=\"active\" exact to=\"/\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <Box height={50} width={50}>\r\n          <Image\r\n            naturalHeight={1}\r\n            naturalWidth={1}\r\n            alt=\"RALM-Beercation Logo\"\r\n            src=\"./icons/beer.svg\"\r\n          />\r\n        </Box>\r\n        <div className=\"main-title\">\r\n          <Heading color=\"orange\" size=\"xs\">\r\n            RALM-BrewHaha{\" \"}\r\n          </Heading>\r\n        </div>\r\n      </Box>\r\n    </NavLink>\r\n\r\n    {/* Sign out Link */}\r\n    <Button\r\n      onClick={handleSignOut}\r\n      color=\"transparent\"\r\n      text=\"Sign Out\"\r\n      inline\r\n      size=\"md\"\r\n    />\r\n  </Box>\r\n);\r\n\r\nconst UnAuthNav = () => (\r\n  <Box\r\n    display=\"flex\"\r\n    alignItems=\"center\"\r\n    justifyContent=\"around\"\r\n    color=\"midnight\"\r\n    height={70}\r\n    padding={1}\r\n    shape=\"roundedBottom\"\r\n  >\r\n    {/* Sign in Link */}\r\n    <NavLink activeClassName=\"active\" to=\"/signin\">\r\n      <Text color=\"white\" size=\"xl\">\r\n        Sign In{\" \"}\r\n      </Text>\r\n    </NavLink>\r\n\r\n    {/* Title and Logo */}\r\n    <NavLink activeClassName=\"active\" exact to=\"/\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <Box height={50} width={50}>\r\n          <Image\r\n            naturalHeight={1}\r\n            naturalWidth={1}\r\n            alt=\"RALM-Beercation Logo\"\r\n            src=\"./icons/beer.svg\"\r\n          />\r\n        </Box>\r\n        {/* Title */}\r\n        <div className=\"main-title\">\r\n          <Heading color=\"orange\" size=\"xs\">\r\n            RALM-BrewHaha{\" \"}\r\n          </Heading>\r\n        </div>\r\n      </Box>\r\n    </NavLink>\r\n\r\n    {/* Sign in Link */}\r\n    <NavLink activeClassName=\"active\" to=\"/signup\">\r\n      <Text color=\"white\" size=\"xl\">\r\n        Sign Up{\" \"}\r\n      </Text>\r\n    </NavLink>\r\n  </Box>\r\n);\r\n\r\nexport default withRouter(Navbar);\r\n","import React from \"react\";\r\nimport Strapi from \"strapi-sdk-javascript/build/main\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Image,\r\n  Card,\r\n  Button,\r\n  Mask,\r\n  IconButton\r\n} from \"gestalt\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { calculatePrice, setCart, getCart } from \"../utils/index\";\r\nconst apiUrl = process.env.API_URL || \"https://ralm-brewhaha.herokuapp.com/\";\r\nconst strapi = new Strapi(apiUrl);\r\n\r\nclass Brews extends React.Component {\r\n  state = {\r\n    brews: [],\r\n    brand: \"\",\r\n    cartItems: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const response = await strapi.request(\"POST\", \"/graphql\", {\r\n        data: {\r\n          query: `query {\r\n            brand(id:\"${this.props.match.params.brandId}\") {\r\n              _id\r\n              name\r\n              brews {\r\n                _id\r\n                name\r\n                description\r\n                image {\r\n                  url\r\n                }\r\n                price\r\n              }\r\n            }\r\n          }`\r\n        }\r\n      });\r\n      console.log(response);\r\n      this.setState({\r\n        brews: response.data.brand.brews,\r\n        brand: response.data.brand.name,\r\n        cartItems: getCart()\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  addToCart = brew => {\r\n    const alreadyInCart = this.state.cartItems.findIndex(\r\n      item => item._id === brew._id\r\n    );\r\n\r\n    if (alreadyInCart === -1) {\r\n      const updatedItems = this.state.cartItems.concat({\r\n        ...brew,\r\n        quantity: 1\r\n      });\r\n      this.setState({ cartItems: updatedItems }, () => {\r\n        setCart(updatedItems);\r\n      });\r\n    } else {\r\n      const updatedItems = [...this.state.cartItems];\r\n      updatedItems[alreadyInCart].quantity += 1;\r\n      this.setState({ cartItems: updatedItems }, () => {\r\n        setCart(updatedItems);\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteItemFromCart = itemToDeleteId => {\r\n    const filteredItems = this.state.cartItems.filter(\r\n      item => item._id !== itemToDeleteId\r\n    );\r\n    this.setState({ cartItems: filteredItems }, () => {\r\n      setCart(filteredItems);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { brand, brews, cartItems } = this.state;\r\n    return (\r\n      <Box\r\n        marginTop={4}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"start\"\r\n        dangerouslySetInlineStyle={{\r\n          __style: {\r\n            flexWrap: \"wrap-reverse\"\r\n          }\r\n        }}\r\n      >\r\n        {/* Brews Section */}\r\n        <Box display=\"flex\" direction=\"column\" alignItems=\"center\">\r\n          {/* Brews Heading */}\r\n          <Box margin={2}>\r\n            <Heading color=\"orchid\">{brand}</Heading>\r\n          </Box>\r\n          {/* Brews */}\r\n          <Box\r\n            dangerouslySetInlineStyle={{\r\n              __style: {\r\n                backgroundColor: \"#bdcdd9\"\r\n              }\r\n            }}\r\n            wrap\r\n            shape=\"rounded\"\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n            padding={4}\r\n          >\r\n            {brews.map(brew => (\r\n              <Box paddingY={4} margin={2} width={210} key={brew._id}>\r\n                <Card\r\n                  image={\r\n                    <Box height={250} width={200}>\r\n                      <Image\r\n                        fit=\"cover\"\r\n                        alt=\"Brew\"\r\n                        naturalHeight={1}\r\n                        naturalWidth={1}\r\n                        src={`${apiUrl}${brew.image.url}`}\r\n                      />\r\n                    </Box>\r\n                  }\r\n                >\r\n                  <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                    direction=\"column\"\r\n                  >\r\n                    <Box marginBottom={2}>\r\n                      <Text bold size=\"xl\">\r\n                        {brew.name}\r\n                      </Text>\r\n                    </Box>\r\n                    <Text>{brew.description}</Text>\r\n                    <Text color=\"orchid\">${brew.price}</Text>\r\n                    <Box marginTop={2}>\r\n                      <Text bold size=\"xl\">\r\n                        <Button\r\n                          onClick={() => this.addToCart(brew)}\r\n                          color=\"blue\"\r\n                          text=\"Add to Cart\"\r\n                        />\r\n                      </Text>\r\n                    </Box>\r\n                  </Box>\r\n                </Card>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n        {/* User Cart */}\r\n        <Box alignSelf=\"end\" marginTop={2} marginLeft={8}>\r\n          <Mask shape=\"rounded\" wash>\r\n            <Box\r\n              display=\"flex\"\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              padding={2}\r\n            >\r\n              {/* User Cart Heading */}\r\n              <Heading align=\"center\" size=\"sm\">\r\n                {\" \"}\r\n                Your Cart\r\n              </Heading>\r\n              <Text color=\"gray\" italic>\r\n                {cartItems.length} items selected\r\n              </Text>\r\n              {/* Cart Items  */}\r\n              {cartItems.map(cartItem => (\r\n                <Box key={cartItem._id} display=\"flex\" alignItems=\"center\">\r\n                  <Text>\r\n                    {cartItem.name} x {cartItem.quantity} -{\" \"}\r\n                    {(cartItem.quantity * cartItem.price).toFixed(2)}\r\n                  </Text>\r\n                  <IconButton\r\n                    accessibilityLabel=\"Delete Item\"\r\n                    icon=\"cancel\"\r\n                    size=\"sm\"\r\n                    iconColor=\"red\"\r\n                    onClick={() => this.deleteItemFromCart(cartItem._id)}\r\n                  />\r\n                </Box>\r\n              ))}\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                direction=\"column\"\r\n              >\r\n                <Box margin={2}>\r\n                  {cartItems.length === 0 && (\r\n                    <Text color=\"red\"> Please select some items</Text>\r\n                  )}\r\n                </Box>\r\n                <Text size=\"lg\">Total: {calculatePrice(cartItems)}</Text>\r\n                <Text>\r\n                  <Link to=\"/checkout\">Checkout</Link>\r\n                </Text>\r\n              </Box>\r\n            </Box>\r\n          </Mask>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Brews;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport \"gestalt/dist/gestalt.css\";\r\n\r\nimport App from \"./components/App\";\r\nimport Signin from \"./components/Signin\";\r\nimport Signup from \"./components/Signup\";\r\nimport Checkout from \"./components/Checkout\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Brews from \"./components/Brews\";\r\nimport { getToken } from \"./utils/index\";\r\n\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      getToken() !== null ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{ pathname: \"/signin\", state: { from: props.location } }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst Root = () => (\r\n  <HashRouter>\r\n    <React.Fragment>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route component={App} exact path=\"/\" />\r\n        <Route component={Signin} path=\"/signin\" />\r\n        <Route component={Signup} path=\"/signup\" />\r\n        <PrivateRoute component={Checkout} path=\"/checkout\" />\r\n        <Route component={Brews} path=\"/:brandId\" />\r\n      </Switch>\r\n    </React.Fragment>\r\n  </HashRouter>\r\n);\r\n\r\nReactDOM.render(<Root />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}